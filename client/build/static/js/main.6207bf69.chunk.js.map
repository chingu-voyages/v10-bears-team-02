{"version":3,"sources":["components/inputField/InputFieldStyles.js","components/inputField/InputField.js","actions/formData.js","components/searchBar/SearchBarStyles.js","actions/searchResults.js","components/searchBar/SearchBar.js","components/navbar/NavBar.js","components/queriedPlants/QueriedPlantsStyles.js","components/queriedPlants/QueriedPlants.js","components/singlePlant/SinglePlantStyles.js","actions/plantStats.js","components/singlePlant/SinglePlant.js","components/plantsLibrary/PlantsLibraryStyles.js","components/plantCard/PlantCardStyles.js","components/plantCard/PlantCard.js","components/plantsLibrary/PlantsLibrary.js","components/homePage/HomePageStyles.js","components/homePage/HomePage.js","components/loginForm/LoginStyles.js","actions/login.js","components/loginForm/Login.js","components/signUpForm/SignUpStyles.js","actions/signUp.js","components/signUpForm/SignUp.js","actions/verifyAuth.js","App.js","serviceWorker.js","reducers/formData.js","reducers/searchResults.js","reducers/plantStats.js","reducers/userData.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","textField","marginLeft","spacing","marginRight","width","connect","updateQueryInput","data","type","props","classes","react_default","a","createElement","TextField","id","name","label","placeholder","className","margin","onChange","event","target","value","grow","flexGrow","menuButton","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","axios","require","state","query","formData","searchBar","submitQuery","dispatch","post","then","response","payload","onSubmit","preventDefault","inputField_InputField","Button","variant","Search_default","root","NavBar","AppBar","Toolbar","IconButton","edge","aria-label","Menu_default","Typography","href","maxWidth","background","paper","RenderPlants","plants","map","plant","index","key","Divider","ListItemLink","ListItemText","primary","common_name","ListItem","assign","button","component","searchResults","List","RenderPlant","console","log","_React$useState","React","useState","_React$useState2","slicedToArray","expanded","setExpanded","handleChange","panel","newExpanded","ExpansionPanel","square","ExpansionPanelSummary","aria-controls","ExpansionPanelDetails","currentPlant","fetchPlantStats","match","params","useEffect","icon","heroContent","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","footer","media","PlantCard","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","CardActions","size","userData","plantsLibrary","Fragment","CssBaseline","Container","align","paragraph","Grid","container","justify","item","xs","sm","md","minHeight","maxHeight","marginBottom","backdrop","left","right","top","bottom","black","opacity","zIndex","backgroundSize","backgroundRepeat","backgroundImage","concat","backgroundPosition","arrowDown","minWidth","h5","more","HomePage","@global","body","avatar","secondary","main","form","submit","submitLogin","userCreds","_useState","_useState2","email","setEmail","_useState3","_useState4","password","setPassword","Avatar","LockOutlined_default","e","required","fullWidth","autoComplete","autoFocus","Link","submitSignUp","nickname","setNickname","_useState5","_useState6","verifyAuth","get","react_router","exact","path","render","searchBar_SearchBar","queriedPlants_QueriedPlants","plantsLibrary_PlantsLibrary","singlePlant_SinglePlant","loginForm_Login","signUpForm_SignUp","Boolean","window","location","hostname","initialState","login","register","username","verifyPassword","perennial","authenticated","rootReducer","combineReducers","arguments","length","undefined","action","objectSpread","middleware","thunk","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","apply","ReactDOM","es","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6207bf69.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n    }\r\n  }));\r\n\r\n  export default useStyles","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useStyles from './InputFieldStyles'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { updateQueryInput } from '../../actions/formData';\r\n\r\nfunction InputField(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n            <TextField\r\n                id={props.name}\r\n                label={props.label}\r\n                placeholder={props.placeholder}\r\n                name={props.name}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={(event) => {\r\n                    props.updateQueryInput(event.target.value)\r\n                    }\r\n                }\r\n            />\r\n    )\r\n}\r\n\r\nInputField.propTypes = {\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, {updateQueryInput})(InputField)","// ACTION CREATORS - functions that go to the reducer\r\n\r\nexport const updateQueryInput = (data) => {\r\n    return {\r\n        type: 'UPDATE_QUERY_INPUT',\r\n        data\r\n    }\r\n}\r\n\r\n\r\n\r\n// ASYNCHRONOUS ACTIONS - make calls to the API\r\n\r\n","import { fade, makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2),\r\n      },\r\n      title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n          display: 'block',\r\n        },\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(3),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: 200,\r\n        },\r\n      },\r\n      sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'flex',\r\n        },\r\n      },\r\n      sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n          display: 'none',\r\n        },\r\n      },\r\n      \r\n  }));\r\n\r\n  export default useStyles","const axios = require('axios');\r\n\r\n// ACTION CREATORS - functions that go to the reducer\r\n\r\n\r\nconst queryPlantsAPI = () => {     \r\n    return {\r\n        type: 'SUBMIT_QUERY'\r\n    }\r\n}\r\n\r\nconst setPlants = (payload) => {\r\n    return {\r\n        type: 'GET_PLANTS_SUCCESS', \r\n        payload\r\n    }\r\n}\r\n\r\n// ASYNCHRONOUS ACTIONS - make calls to the API\r\nexport const submitQuery = (query) => {\r\n   \r\n    return (dispatch) => {    \r\n        dispatch(queryPlantsAPI())   \r\n        \r\n        return axios.post('/api/query', {query: query})        \r\n            .then(response => {               \r\n                dispatch(setPlants(response.data))\r\n            }\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport InputField from '../inputField/InputField'\r\nimport Button from '@material-ui/core/Button'\r\nimport useStyles from './SearchBarStyles'\r\nimport { submitQuery } from '../../actions/searchResults'\r\nimport { connect } from 'react-redux'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction SearchBar(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <form className={classes.search} onSubmit={(event) => {\r\n                event.preventDefault()\r\n                props.submitQuery(props.query)\r\n            }\r\n        }>         \r\n         <div>\r\n             <InputField color='white' name='query' label='Search for a plant'/>\r\n        </div>\r\n        <Button color='primary' variant='outlined' type='submit'>             \r\n            <SearchIcon /> \r\n        </Button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {    \r\n    return {\r\n        query: state.formData.searchBar.query\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { submitQuery })(SearchBar)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchBar from '../searchBar/SearchBar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Garden Guru\r\n          </Typography>  \r\n          <Button\r\n            color=\"inherit\"\r\n            href=\"/login\"\r\n          >Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n      }\r\n  }));\r\n\r\n  export default useStyles","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport useStyles from './QueriedPlantsStyles'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nfunction RenderPlants(props) {  \r\n    return props.plants ? (\r\n        props.plants.map((plant, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <Divider />\r\n                    <ListItemLink href={\"/plant/\" + plant.id} >\r\n                        <ListItemText primary={plant.common_name} />\r\n                    </ListItemLink>\r\n                </div>\r\n            )\r\n        })\r\n    ) : null\r\n}\r\n\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nfunction QueriedPlants(props) {  \r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n        <List component=\"nav\" aria-label=\"Plant Search Results\">\r\n            <RenderPlants plants={props.plants}/>\r\n        </List>\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        plants: state.searchResults\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QueriedPlants)","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n      \r\n  }\r\n\r\n  \r\n\r\n\r\n}));\r\n\r\nexport default useStyles","const axios = require('axios')\r\n\r\n//Action Creator\r\n\r\n/**\r\n * \r\n */\r\nconst querySinglePlant = () => { \r\n    return {\r\n        \r\n        type: 'QUERY_SINGLE_PLANT'\r\n    }\r\n}\r\n\r\n/** \r\n * @param {String} data  plant id\r\n */\r\nconst getPlantStats = (payload) => {\r\n    return {\r\n        type: 'GET_PLANT_STATS',\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n\r\n//Action\r\n\r\n\r\nexport const fetchPlantStats = (id) => {    \r\n    return (dispatch) => {            \r\n       dispatch(querySinglePlant())       \r\n        return axios.post('/api/plant', {id: id})        \r\n            .then(response => {                    \r\n                dispatch(getPlantStats(response.data)) \r\n            }\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './SinglePlantStyles'\r\nimport  { fetchPlantStats }   from '../../actions/plantStats'\r\n\r\n\r\n\r\nfunction RenderPlant(props){\r\n    console.log(props.plant)\r\n\r\n    const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n    const handleChange = panel => (event, newExpanded) => {\r\n      setExpanded(newExpanded ? panel : false);\r\n    };\r\n    return (\r\n        <div>\r\n        <ExpansionPanel square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Typography>Collapsible Group Item #1</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <ExpansionPanelSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n          <Typography>Collapsible Group Item #2</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum \r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      <ExpansionPanel square expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <ExpansionPanelSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n          <Typography>Collapsible Group Item #3</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <Typography>\r\n            Lorem ipsum dolor\r\n          </Typography>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction SinglePlant(props) {\r\n    const classes = useStyles()\r\n    const { fetchPlantStats } = props\r\n    const { id } = props.match.params\r\n    console.log(props)\r\n    useEffect(() => {  \r\n    \r\n            fetchPlantStats(id)\r\n    }, [id, fetchPlantStats])\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <RenderPlant plant={props.plant} />\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    console.log(state)\r\n    return {\r\n        plant: state.currentPlant\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPlantStats})(SinglePlant)","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(6),\r\n    },\r\n  }));\r\n\r\nexport default useStyles","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n\r\n  export default useStyles","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './PlantCardStyles';\r\n\r\n\r\nexport default function PlantCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"http://miriadna.com/desctopwalls/images/max/The-sprout.jpg\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Common Name\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Scientific Name\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Delete\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          More Details\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\n//import AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\n// import CameraIcon from '@material-ui/icons/PhotoCamera';\r\n// import Card from '@material-ui/core/Card';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\n//import Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './PlantsLibraryStyles'\r\nimport Container from '@material-ui/core/Container';\r\n//import Link from '@material-ui/core/Link';\r\nimport PlantCard from '../../components/plantCard/PlantCard';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction PlantsLibrary(props) {\r\n  // hardcode cards until setup CRUD API on backend\r\n  // const cards = props.plants;\r\n  const cards = [1,2,3,4,5,6,7]\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              My Garden\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n              These are the current plants in your garden.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    Create Plant\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* <Button variant=\"outlined\" color=\"primary\">\r\n                    Secondary action\r\n                  </Button> */}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map(card => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                <PlantCard />\r\n\r\n                {/* <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image=\"https://source.unsplash.com/random\"\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      Heading\r\n                    </Typography>\r\n                    <Typography>\r\n                      This is a media card. You can use this section to describe the content.\r\n                    </Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      View\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Edit\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card> */}\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          You are the Guru of Your Garden\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Happy Planting!\r\n        </Typography>\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    plants: state.userData.plantsLibrary\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PlantsLibrary)","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst backgroundImage =\r\n'https://images.unsplash.com/photo-1501004318641-b39e6451bec6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=966&q=80';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.common.white,\r\n        position: 'relative',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        [theme.breakpoints.up('sm')]: {\r\n          height: '80vh',\r\n          minHeight: 500,\r\n          maxHeight: 1300,\r\n        },\r\n      },\r\n    container: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(14),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    backdrop: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundColor: theme.palette.common.black,\r\n        opacity: 0.5,\r\n        zIndex: -1,\r\n    },\r\n    background: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        zIndex: -2,\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundColor: '#7fc7d9', // Average color of the background image.\r\n        backgroundPosition: 'center',\r\n    },\r\n    arrowDown: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(4),\r\n    },  \r\n    button: {\r\n      minWidth: 200,\r\n    },\r\n    h5: {\r\n      marginBottom: theme.spacing(4),\r\n      marginTop: theme.spacing(4),\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginTop: theme.spacing(10),\r\n      },\r\n    },\r\n    more: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  export default useStyles;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './HomePageStyles';\r\nimport clsx from 'clsx';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst backgroundImage =\r\n    'https://images.unsplash.com/photo-1501004318641-b39e6451bec6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=966&q=80'\r\n\r\nfunction Layout(props) {\r\n  const { backgroundClassName, children } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <section className={classes.root}>\r\n      <Container className={classes.container}>\r\n        {children}\r\n        <div className={classes.backdrop} />\r\n        <div className={clsx(classes.background, backgroundClassName)} />\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  backgroundClassName: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nfunction HomePage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <div>\r\n    <Layout backgroundClassName={classes.background}>\r\n      {/* Increase the network loading priority of the background image. */}\r\n      <img style={{ display: 'none' }} src={backgroundImage} alt=\"\" />\r\n      <Typography color=\"inherit\" align=\"center\" variant=\"h2\" marked=\"center\">\r\n        Welcome to Your Plant Growing Guide\r\n      </Typography>\r\n      <Typography color=\"inherit\" align=\"center\" variant=\"h5\" className={classes.h5}>\r\n        Search for detailed information about plants and build a digital garden\r\n      </Typography>\r\n      <Button\r\n        color=\"secondary\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        component=\"a\"\r\n        href=\"/premium-themes/onepirate/sign-up/\"\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      <Typography variant=\"body2\" color=\"inherit\" className={classes.more}>\r\n        BECOME THE GURU OF YOUR GARDEN\r\n      </Typography>\r\n    </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nHomePage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default HomePage;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( theme =>({\r\n    '@global': {\r\n        body: {\r\n          backgroundColor: theme.palette.common.white,\r\n        },\r\n      },\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n  \r\n}));\r\n\r\nexport default useStyles","const axios = require('axios')\r\n\r\n//Action Creator\r\n\r\nconst submitLoginCredentials = () => { \r\n    return {        \r\n        type: 'SUBMIT_LOGIN_CREDS'\r\n    }\r\n}\r\n\r\n// const loginSuccess = () => {\r\n//     return {\r\n//         type: 'LOGIN_SUCCESS'      \r\n//     }\r\n// }\r\n\r\n// const loginFailed = () => { \r\n//     return {\r\n//         type: 'LOGIN_FAIL'\r\n//     }\r\n// }\r\n\r\n//Action\r\nexport const submitLogin = (userCreds) => {    \r\n    return (dispatch) => {        \r\n       dispatch(submitLoginCredentials()) \r\n        return axios.post('/api/local_auth/login', userCreds )        \r\n            .then(response => {                    \r\n                console.log(\"testst\", response)                \r\n            }\r\n        )\r\n    }\r\n\r\n}","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './LoginStyles';\r\nimport { connect } from 'react-redux';\r\nimport { submitLogin } from '../../actions/login';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();    \r\n    const [email, setEmail] = useState()\r\n    const [password, setPassword] = useState()\r\n\r\n    function handleSumbit(e) { \r\n        e.preventDefault()      \r\n        props.submitLogin({email, password})        \r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Login\r\n            </Typography>\r\n            <form className={classes.form} onSubmit={handleSumbit}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    onChange={(e)=>{setEmail(e.target.value)}}\r\n                    autoComplete=\"email\"\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    onChange={(e)=>{setPassword(e.target.value)}}\r\n                    autoComplete=\"current-password\"\r\n                />            \r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                Login\r\n                </Button>\r\n                <Grid container>            \r\n                <Grid item>\r\n                    <Link href=\"/signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                </Grid>\r\n                </Grid>\r\n            </form>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default connect(null, {submitLogin})(Login)","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( theme =>({\r\n    '@global': {\r\n        body: {\r\n          backgroundColor: theme.palette.common.white,\r\n        },\r\n      },\r\n      paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n      avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n      },\r\n      form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n  \r\n}));\r\n\r\nexport default useStyles","const axios = require('axios')\r\n\r\n//Action Creator\r\n\r\nconst submitSignUpCredentials = () => { \r\n    return {        \r\n        type: 'SUBMIT_SIGNUP_CREDS'\r\n    }\r\n}\r\n\r\nconst signUpSuccess = () => {\r\n    return {\r\n        type: 'SIGNUP_SUCCESS'      \r\n    }\r\n}\r\n\r\n//Action\r\nexport const submitSignUp = (userCreds) => {    \r\n    return (dispatch) => {            \r\n       dispatch(submitSignUpCredentials())       \r\n        return axios.post('/api/local_auth/signup', {userCreds})        \r\n            .then(response => {                    \r\n                console.log(response)\r\n                dispatch(signUpSuccess())\r\n            }\r\n        )\r\n    }\r\n\r\n}","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './SignUpStyles';\r\nimport { connect } from 'react-redux';\r\nimport { submitSignUp } from '../../actions/signUp';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction SignUp(props) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState()\r\n    const [nickname, setNickname] = useState()\r\n    const [password, setPassword] = useState()\r\n\r\n    function handleSumbit(e) { \r\n        e.preventDefault()        \r\n        props.submitSignUp({email, nickname, password})        \r\n    }\r\n    \r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSumbit}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required={true}\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"nickname\"\r\n                label=\"Nickname\"\r\n                name=\"nickname\"  \r\n                onChange={(e) => setNickname(e.target.value)}      \r\n            />                  \r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                autoComplete=\"current-password\"\r\n            />       \r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"              \r\n                className={classes.submit}\r\n            >\r\n                Sign Up\r\n            </Button>\r\n            <Grid container>            \r\n                <Grid item>\r\n                <Link href=\"/login\" variant=\"body2\">\r\n                    {\"Already have an account? Sign In\"}\r\n                </Link>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n      </div>\r\n    \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default connect(null, {submitSignUp})(SignUp)","const axios = require('axios')\r\n\r\n//Action Creator\r\n\r\nconst verifyCookie = () => { \r\n    return {        \r\n        type: 'VERIFY_COOKIE'\r\n    }\r\n}\r\n\r\n\r\n//Action\r\nexport const verifyAuth = () => {    \r\n    return (dispatch) => {        \r\n       //dispatch(verifyCookie()) \r\n        return axios.get('/api/local_auth/check' )        \r\n            .then(response => {                    \r\n                console.log(\"check auth\", response.data)                \r\n            }\r\n        )\r\n    }\r\n\r\n}","import React, { useEffect }from 'react';\r\nimport NavBar from './components/navbar/NavBar';\r\nimport SearchBar from './components/searchBar/SearchBar';\r\nimport './App.css';\r\nimport QueriedPlants from './components/queriedPlants/QueriedPlants';\r\nimport SinglePlant from './components/singlePlant/SinglePlant';\r\nimport PlantsLibrary from './components/plantsLibrary/PlantsLibrary';\r\nimport HomePage from './components/homePage/HomePage';\r\nimport Login from './components/loginForm/Login';\r\nimport SignUp from './components/signUpForm/SignUp'\r\nimport { connect } from 'react-redux';\r\nimport { verifyAuth } from './actions/verifyAuth'\r\nimport { Route } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nfunction App(props) {\r\n  \r\n  const checkAuth = () => {    \r\n    console.log('check for cookie and deserialize user')\r\n    props.verifyAuth()\r\n  }\r\n\r\n  useEffect(checkAuth)\r\n  return (\r\n    <div className=\"App\"> \r\n    \r\n      <Route exact path=\"/\" render={props => (\r\n        <>\r\n          <NavBar />\r\n          <SearchBar />\r\n          {/* <HomePage /> */}\r\n          <QueriedPlants />\r\n          <PlantsLibrary />\r\n        </>\r\n      )} /> \r\n      \r\n      <Route path=\"/plant/:id\" render={props => <SinglePlant {...props} />} />\r\n      <Route path=\"/login\" render={props => <Login {...props} />} />\r\n      <Route path=\"/signup\" render={props =><SignUp {...props } /> } />\r\n    </div>\r\n  );\r\n}\r\n//add actionhere\r\nexport default connect(null, {verifyAuth})(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    searchBar: {\r\n        query: '',\r\n    },\r\n    login: {\r\n        email: '',\r\n        password: ''\r\n    },\r\n    register: {\r\n        email: '',\r\n        username: '',\r\n        password: '',\r\n        verifyPassword: ''\r\n    }\r\n}\r\n\r\nexport default (state = initialState, action) => {   \r\n    switch (action.type) {\r\n       \r\n        case 'UPDATE_QUERY_INPUT':\r\n            return {\r\n                ...state,\r\n                searchBar: {\r\n                    query: action.data\r\n                }\r\n            }   \r\n    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = []\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch (action.type) {                           \r\n        \r\n        case 'GET_PLANTS_SUCCESS':\r\n            return action.payload   \r\n\r\n            default:\r\n                return state;\r\n    }\r\n}","const initialState = {}\r\n\r\n\r\nexport default (state = initialState, action) => {   \r\n    switch (action.type) { \r\n       \r\n        case 'GET_PLANT_STATS':\r\n\r\n            return action.payload\r\n        \r\n        default: \r\n            \r\n            return  state\r\n          \r\n    }\r\n      \r\n}","const initialState = {\r\n    email: '',\r\n    username: '',\r\n    plantsLibrary: [],\r\n    currentPlant: {\r\n        name: '',\r\n        perennial: null\r\n    },\r\n    authenticated: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}","import thunk from 'redux-thunk'\r\nimport {\r\n    createStore,\r\n    applyMiddleware,\r\n    combineReducers,\r\n    compose\r\n} from 'redux';\r\nimport formData from './reducers/formData';\r\nimport searchResults from './reducers/searchResults'\r\nimport plantStats from './reducers/plantStats'\r\nimport userData from './reducers/userData';\r\n\r\nconst rootReducer = combineReducers({\r\n    formData, \r\n    searchResults, \r\n    currentPlant: plantStats,\r\n    userData\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancer(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;\r\n\r\n// const store = {\r\n//     formData: {\r\n//         searchBar: {\r\n//             query: '',\r\n//         },\r\n//         login: {\r\n//             email: '',\r\n//             password: ''\r\n//         },\r\n//         register: {\r\n//             email: '',\r\n//             username: '',\r\n//             password: '',\r\n//             verify_password: ''\r\n//         }\r\n//     },\r\n//     userData: {\r\n//         email: '',\r\n//         username: '',\r\n//         plantsLibrary: [],\r\n//         currentPlant: {\r\n//             name: '',\r\n//             perennial: null\r\n//         },\r\n//         authenticated: false\r\n//     },\r\n//     currentPlant:{}       \r\n//     searchResults: []\r\n// }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport store from './store.js';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>           \r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}